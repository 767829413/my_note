/*练习*/

/*创建系表*/
create table `department`(
`dept_id` varchar(64) primary key,
`dept_name` varchar(32) not null unique
)charset = utf8 engine = innodb;

/*创建班级表*/
create table `class` (
`class_id` varchar(64) primary key,
`subject` varchar(32) not null default '',
/*系名*/
`dept_name` varchar(32) not null,
`num` mediumint unsigned not null default 0,
`join_school` date not null,
foreign key (`dept_name`) references `department`(`dept_name`)
)charset = utf8 engine = innodb;

/*创建学生表*/
create table `student` (
`stu_id` varchar(64) primary key,
`name` varchar(32) not null default '',
`age` smallint unsigned not null default 0,
`class_id` varchar(64),
foreign key (`class_id`) references `class`(`class_id`)
)charset = utf8 engine = innodb;


/*向department表插入数据*/
insert into `department` values
('001','数学'),
('002','计算机'),
('003','化学'),
('004','中文'),
('005','经济');

/*向class表插入数据*/
insert into `class` values
('101','软件','计算机',20,'1995-9-3'),
('102','微电子','计算机',30,'1996-9-3'),
('111','无机化学','化学',29,'1995-9-3'),
('112','高分子化学','化学',25,'1996-9-3'),
('121','统计数学','数学',20,'1995-9-3'),
('131','现代语言','中文',20,'1996-9-3'),
('141','国际贸易','经济',30,'1997-9-3'),
('142','国际金融','经济',14,'1996-9-3');

/*向student表插入数据*/
insert into `student` values
('8101','张三',18,'101'),
('8102','钱四',16,'121'),
('8103','王铃',17,'131'),
('8105','李飞',19,'102'),
('8109','赵四',18,'141'),
('8110','李可',20,'142'),
('8201','张飞',18,'111'),
('8302','周瑜',16,'112'),
('8203','王亮',17,'111'),
('8305','董卿',19,'102'),
('8409','赵龙',18,'101'),
('8510','李丽',20,'142');

/*3 完成以下查询功能*/
/*（1）找出所有姓李的学生。*/
select name from student where name like '李%';
/*（2）列出所有开设超过两个专业的系的名字。*/
select num.dept_name from (select count(subject) as b,dept_name from class group by dept_name) as num,department where department.dept_name = num.dept_name and num.b >=2;

select dept_name,count(subject) from class group by dept_name having count(subject) >= 2;



/*（3）列出人数大于等于30的系的编号和名字。*/

select sum(num) as all_num,dept_name from class group by dept_name having all_num >= 30;
/*4 学校又新增加了一个物理系，编号为006。*/
insert into department values('006','物理');

/*5 学生张三退学，请更新相关的表。 */
delete from student where name = '张三';

/*-----------------------------------------------------*/
/*-----------------------------------------------------*/
/*-----------------------------------------------------*/
/*-----------------------------------------------------*/
/*创建sports_meet数据库*/
create database `sports_meet` charset utf8 collate utf8_general_ci;

/*创建sporter表*/
create table `sporter` (
`sp_id` varchar(64) primary key comment '运动员id',
`sp_name` varchar(20) not null default '',
`sp_sex` enum('男','女') not null default '男',
`dept_name` varchar(20) not null default ''
) charset = utf8 engine = innodb;

/*创建item表*/
create table `item` (
`it_id` varchar(64) primary key comment '项目id',
`it_name` varchar(20) not null default '',
`it_loc` varchar(64) not null default '' comment '比赛项目所在地址'
) charset = utf8 engine = innodb;

/*创建grade表*/
create table `grade` (
`sp_id` varchar(64) comment '运动员id',
`it_id` varchar(64) comment '项目id',
`mark` enum('6','4','2','0') comment '积分',
foreign key (`sp_id`) references `sporter`(`sp_id`),
foreign key (`it_id`) references `item`(`it_id`)
) charset = utf8 engine = innodb;

/*向sport表插入数据*/
insert into `sporter` values 
('1001','李明','男','计算机系'),
('1002','张三','男','数学系'),
('1003','李四','男','计算机系'),
('1004','王二','男','物理系'),
('1005','李娜','女','心理系'),
('1006','孙丽','女','数学系');

/*向item表插入数据*/
insert into item values 
('x001','男子五千米','一操场'),
('x002','男子标枪','一操场'),
('x003','男子跳远','二操场'),
('x004','女子跳高','二操场'),
('x005','女子三千米','三操场');

/*向mark表插入数据*/
insert into grade values 
('1002','x003','6'),
('1004','x003','2'),
('1005','x004','6'),
('1006','x004','4'),
('1001','x001','6'),
('1002','x001','4'),
('1003','x001','2'),
('1004','x001','0'),
('1001','x003','4');

/*3. 完成如下查询*/
/*a) 求出目前总积分最高的系名，及其积分。*/
 select sum(mark) as total_grade,dept_name from sporter,grade where grade.sp_id = sporter.sp_id group by dept_name order by total_grade desc limit 0,1;

 select max(total_grade),dept_name from (select sum(mark) as total_grade,dept_name from sporter,grade where grade.sp_id = sporter.sp_id group by dept_name) as find;




/*b) 找出在一操场进行比赛的各项目名称及其冠军的姓名*/

select sporter.sp_name,gi.it_name,max(gi.mark) from (select it_name,sp_id,mark from grade,item where item.it_id = grade.it_id) as gi,sporter where gi.sp_id = sporter.sp_id group by gi.it_name;

/*c) 找出参加了张三所参加的所有项目的其他同学的姓名*/
???

/*4. 经查张三因为使用了违禁药品，其成绩都记0分，请在数据库中作出相应修改。*/
select sp_id from sporter where sp_name = '张三';
update grade set mark = '0' where sp_id = '1002';

/*5. 经组委会协商，需要删除女子跳高比赛项目。*/  
select * from item where it_name = '女子跳高';
select * from grade where it_id = 'x004';
delete from grade where it_id = 'x004';
delete from item where it_id = 'x004';



#----------------------index work-------
#primary key 1
create table `order1`(
`or_id` int unsigned primary key auto_increment,
`or_name` varchar(20) not null default '',
`or_num` int unsigned not null default 0
)charset utf8 engine myisam;
#primary key 2
create table `order2`(
`or_id` int unsigned auto_increment,
`or_name` varchar(20) not null default '',
`or_num` int unsigned not null default 0,
primary key (`or_id`)
)charset utf8 engine myisam;
#primary key 3
create table `order3`(
`or_id` int unsigned,
`or_name` varchar(20) not null default '',
`or_num` int unsigned not null default 0
)charset utf8 engine myisam;

alter table `order3` add primary key (`or_id`);




#--------
create table `menu` (
`id` int unsigned auto_increment,
`name` varchar(20) not null default '',
`chef` varchar(20) not null default '',
`card_id` char(18) not null,
primary key (`id`),
unique (`card_id`)
)charset utf8 engine myisam;

create table `menu2` (
`id` int unsigned auto_increment,
`name` varchar(20) not null default '',
`chef` varchar(20) not null default '',
`card_id` char(18) not null unique,
primary key (`id`)
)charset utf8 engine myisam;

create table `menu3` (
`id` int unsigned auto_increment,
`name` varchar(20) not null default '',
`chef` varchar(20) not null default '',
`card_id` char(18) not null,
primary key (`id`)
)charset utf8 engine myisam;

create unique index `inx_card_id` on `menu3`(`card_id`);


#-----------
create table `sporter1`(
id int unsigned auto_increment,
name varchar(20) not null default '',
speciality varchar(200) not null default '',
primary key (id),
index (name)
)charset utf8 engine myisam;

create table `sporter2`(
id int unsigned auto_increment,
name varchar(20) not null default '',
speciality varchar(200) not null default '',
primary key (id)
)charset utf8 engine myisam;

create index inx_name on sporter2(name);

create table `sporter3`(
id int unsigned auto_increment,
name varchar(20) not null default '',
speciality varchar(200) not null default '',
primary key (id)
)charset utf8 engine myisam;

alter table sporter3 add index (name);